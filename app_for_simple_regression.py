# -*- coding: utf-8 -*-
"""App for simple regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VbDNs7DU6GZHc2YjwdNDcrZwR2MKassd
"""
import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

st.title("Linear Regression Explorer")
st.write("Manipulate the slope and intercept of a linear equation to visualize the relationship between EPS and Tesla Stock Price.")

# Hypothetical data (same as provided)
data = {'TeslaStockPrice': [150, 160, 170, 180, 190, 200],
        'EPS': [5.0, 5.5, 6.0, 6.5, 7.0, 7.5]}
df = pd.DataFrame(data)

st.sidebar.header("Adjust Model Parameters")

# Widgets to control slope and intercept
intercept = st.sidebar.slider("Intercept (β₀)", float(model.params['const']) - 50, float(model.params['const']) + 50, float(model.params['const']), 0.1)
slope = st.sidebar.slider("Slope (β₁)", float(model.params['EPS']) - 5, float(model.params['EPS']) + 5, float(model.params['EPS']), 0.01)

st.write(f"Using Intercept (β₀): {intercept:.2f}")
st.write(f"Using Slope (β₁): {slope:.2f}")

# Generate points for the line based on the adjusted slope and intercept
x_line = np.linspace(df['EPS'].min(), df['EPS'].max(), 100)
y_line = intercept + slope * x_line

# Create the plot
fig = px.scatter(df, x='EPS', y='TeslaStockPrice', title='Tesla Stock Price vs. EPS')

# Add the linear regression line
fig.add_scatter(x=x_line, y=y_line, mode='lines', name=f'Predicted Line (β₀={intercept:.2f}, β₁={slope:.2f})')

fig.update_layout(
    xaxis_title="Earnings Per Share (EPS)",
    yaxis_title="Tesla Stock Price"
)

# Display the plot
st.plotly_chart(fig)

st.write("This app demonstrates a simple linear relationship based on the equation:")
st.latex(r'\text{TeslaStockPrice} = \beta_0 + \beta_1 \cdot \text{EPS}')
st.write("Use the sliders on the left to change the values of the intercept (β₀) and slope (β₁) and observe how the plotted line changes.")

st.markdown("""
This is a simplified demonstration. In a real-world scenario, a regression model would be fitted to historical data to estimate the optimal slope and intercept values.
""")
